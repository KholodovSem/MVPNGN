/* 
!Условие:
Дана последовательность чисел от 1 до 10 ... или 10 миллиардов. Числа отсортированы
по возрастанию (1, 2, 3 и т.д.). В этой последовательности отсутствуют 2 числа - мы
знаем длину и границы последовательности, мы знаем - в последовательности
отсутствуют 2 числа, но не знаем - какие именно числа отсутствуют.
Tasks :
1. Нужно найти отсутствующие числа оптимальным способом. например если
отсутствуют 2 и 3 последовательность будет выглядеть следующим образом 1,
4, 5, 6 ... 10.000.000.000
2. Нужно оценить вычислительную сложность решения.

------------------------------------------------------------------------------------------

!Решение (Для примера взята последовательность чисел от 1 до 10):
    *Шаг 1.
    Мы знаем что числа идут последовательно.
    Это значит, что я могу предположить, что если я возьму произвольное число 
    из диапазона чисел от 1 до 10, например 8 и отниму от него предыдущее  число (7),
    то результат будет 1.
    Если моё предположение верно, значит последовательность соблюдается  и я могу переходить
    к следующему числу, в противном случае последовательность нарушена.

    *Шаг 2. (Если последовательность нарушена)
    Для того чтобы найти недостающие числа мне понадобиться:
    1. Массив в который я буду пушить недостающие числа
    2. Разница между текущим числом (на данной итерации) и предыдущим  числом.
    3. Переменная, в которой будет хранится число 1 (т.к. числа последовательно увеличиваются на 1)

    Недостающим числом(и) будет результат сложения п.2 и п.3 до тех пор, пока 
    результирующее число остаётся меньше текущего числа (на данной итерации).
    Эти числа отправляю в ранее созданный массив, его же и возвращаю из функции
*/

const arrayOfNumbers = [1, 3, 4, 5, 6, 8, 9, 10];

function findMissingNumber(array) {
    const result = [] // Массив в который я буду пушить недостающие числа
    for (let i = 1; i < array.length; i += 1) { // Цикл для перебора поступающего массива
        if (array[i] - array[i - 1] != 1) { // Проверка (Разница между текущим и предедущим числом должна равняться 1)
            const x = array[i] - array[i - 1]; // Разница между текущим числом (на данной итерации) и передыдущим числом
            let y = 1; // Переменная, в которой будет хранится цисло 1
            while (y < x) { //Цикл результатом каждой итерации которого, будет недостающее число.
                result.push(array[i - 1] + y);
                y += 1;
            }
        }
    }
    return result;
}

/* 
    *Вычислительная сложность решения O(n)
    O(n - 1 + 2)
    Так как в примечаниях BigO рассматриваются только доминирующие термины,
    результат будет O(n)
    Кол-во операций будет пропорционально кол-ву исходных данных.
*/

const t0 = performance.now();

console.log(findMissingNumber(arrayOfNumbers))

const t1 = performance.now();

console.log(t1 - t0, 'milliseconds');
